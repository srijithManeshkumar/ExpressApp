/*
 * NOTICE:         THIS MATERIAL CONTAINS TRADE SECRETS THAT BELONG TO ALLTEL 
 *               INFORMATION SERVICES. ANY UNAUTHORIZED ACCESS, USE, DUPLICATION 
 *                               OR DISCLOSURE IS UNLAWFUL.
 *
 *		        COPYRIGHT (C) 2001
 *	       			BY
 *	        ALLTEL INFORMATION SERVICES
 *
 * 
 * MODULE:		 ErrorType
 * 
 * DESCRIPTION:  This interface defines the error types recognized for 
 *               exceptions in the system.
 * 
 *
 * CHANGE HISTORY:
 *
 *
 */
 
 package com.alltel.lsr.common.error.objects;

/**
 * The ErrorType interface is an interface that defines the error types
 * recognized for exceptions in the system. These are the recognized
 * error types:
 * <UL>
 *   <LI> SECURITY_ERROR
 *   <LI> CONFIG_ERROR
 *   <LI> DATABASE_ERROR
 *   <LI> APPSERVER_ERROR
 *   <LI> EXTERNAL_COMMUNICATIONS_ERROR
 * </UL>
 * <P>
 * Any AlltelException object created within the system must specify one of these
 * types.
 * <P>
 *
 * Configuration parameters used:
 * <UL>
 *   <LI>None (this is an interface).
 * </UL>
 */

public interface ErrorType
{
    /** 
     * Returns error type for an AlltelException object. This will be one of the
     * error types defined by this interface.
     *
     * @return  int  type of error for AlltelException object
     */
    public int getErrorType(); 
    
    /** Error conditions related to security (unauthorized access, security violations, etc.) */
	public static final int SECURITY_ERROR   = 0;
    
    /** Errors encountered while accessing application configuration parameters. */
	public static final int CONFIG_ERROR     = 1;
    
    /** Errors encountered while accessing the database. */
	public static final int DATABASE_ERROR   = 3;
    
    /** Errors caused by the Weblogic application server. This type is also
     * used for general run-time errors generated by the application. */
	public static final int APPSERVER_ERROR  = 4;
    
    /** Errors encountered when communicating with external systems. */
	public static final int EXTERNAL_COMMUNICATIONS_ERROR = 8;
}
